#include<bits/stdc++.h>
#include<time.h>
#include<fstream>
using namespace std;
int compaile(string inp,string ans){
    fstream finp,fans;
    fans.open(ans+".txt",ios::in);
    finp.open(inp+".cpp",ios::in);
    if(!finp){
        cout << "輸入檔名錯誤!";
        return 0;
    }
    if(!fans){
        cout << "輸入答案檔名錯誤!";
        return 0;
    }
    string com="g++ -g -O2 -std=gnu++11 -o ./out/"+inp+".exe"+" ./inp/"+inp+".cpp";
    cout << com<<endl;
    if(system(com.c_str())){
        return 0;
    }
    com="g++ -g -O2 -std=gnu++11 -o ./ansout/"+ans+".exe"+" ./ans/"+ans+".cpp";
    system(com.c_str());
    return 1;
}
int judge(string inp,string ans,int tim){
//    auto startTime = steady_clock::now();
//
//    cmdS = rootDir + "rightexe.exe < " + rootDir + "test" + nowS + "_" + i2s(i) + ".txt > " + rootDir + "rightOut" + i2s(i) + ".txt";
//    system(cmdS.c_str());
//
//    //cout << "correct answer cost " << (steady_clock::now() - startTime).count() << " at test" << i << endl;
//    auto timeout =  (steady_clock::now() - startTime) * 15;
//    auto timeout2 = seconds(3);
//
//    startTime = steady_clock::now();
//
//    cmdS = rootDir + "submitexe.exe < " + rootDir + "test" + nowS + "_" + i2s(i) + ".txt > " + rootDir + "submitOut" + i2s(i) + ".txt";
//    system(cmdS.c_str());
//
//    auto currentTime = steady_clock::now();
//    //cout << "submit answer cost  " << (steady_clock::now() - startTime).count() << " at test" << i << endl;
//    if (currentTime - startTime > timeout || currentTime - startTime > timeout2) {
//        cout << "Oh! No! Time Limit Exceeded at test " << i << "!! Stop the testing to prevent time wasted. Orz" << endl;
//        return;
//    }
}
void rm(){

}
int main(){
    string inp,ans;
    int tim;
    while(true){
        cout << "請輸入程式檔名,答案檔名,時間";
        cin >> inp>>ans>> tim;
        int result=compaile(inp,ans);
        if(result==1){
            result=judge(inp,ans,tim);
            rm();
        }
        switch(result){
        case 0:
            cout << "CE"<<endl;
            break;
        case 1:
            cout << "AC"<<endl;
            break;
        case 2:
            cout << "TLE"<<endl;
            break;
        case 3:
            cout << "WA"<<endl;
            break;
        case 4:
            cout << "RE"<<endl;
            break;
        }
    }
    return 0;
}
